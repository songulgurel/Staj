--Bootstrap nedir?--
>HTML, CSS ve JavaScript ile yazılmış kodların kullanışlı, güncellenebilir, yeniden kullanılabilir kod parçalarından oluşan koleksiyondur. 

-Neden tercih edilir?
>Bootstrap önceden tanımlanmış kendi grid sistemi ile birlikte gelir.
>Kullanımı rahattır. Dosyaları kolay erişim için derlenmiştir. Doğrudan içerikle doldurulabilir. 
>Duyarlı tasarımı sayesinde kullanılan ekrana göre otomatik bir biçimde adapte olur.
>Bootstrap ile tasarlanan web sitesi bütün web tarayıcılarında aynı şekilde görünür. Tutarsızlığa yer verilmez ya da birinde çalışıp diğerinde çalışmamazlık yapmaz.
>Önceden tanımlanmış bileşenleri seçip değişkenleri kendinize göre özelleştirilebilir, değiştirilebilir.
>İçerisinde bulundurduğu şablonlar sayesinde doğrudan kullanıma geçilebilir.


--Grid sistemi nedir?--
>Grid sistemi bir tasarımcının hazırladığı tasarım içindeki ögeleri düzenlemek ve hizalamak için kullanılan yapıdır. Tasarım alanı sütun ve satırlara bölen yatay ve dikey çizgilerden oluşmaktadır. Bu sayede metin veya resim gibi ögelerin hizalanmasını ve düzenlenmesini sağlar.
>Bootstrap için grid sistemi, tasarıyı düzenlemek ve hizalamak için kapsayıcı, satır ve sütun kullanır. Tamamen duyarlıdır ve flexbox ile oluşturulmuştur.


--CSS Flexbox yapısı nedir?--
> Flexbox esnek kutu modeli demektir yani bu kutu modellerinde birçok hizalama özelliği bulunur. Ögeler hem yatay hem de dikey eksende hizalanabilir ya da farklı hizalama seçenekkerli bulunabilir.

-Display:flex
>Flexboxın çalışabilmesi için bu veya display:inline-flex özelliklerinden birine sahip olmalıdır.

-flex-direction:
>4 değere sahiptir, bu değerler;
1)Row: Satır içi blokları yan yana hizalar.
2)Row-reverse: Satır içi blokları sondan başlayarak yani tersetn yan yana hizalar.
3)Column: Ögeler alt alta bloklar halinde listelenir.
4)Column-reverse: Ögeler sondan başlayarak tersten alt alta bloklar halinde listelenir.

-Kullanımı:
div.flex{flex-direction: row | row-reverse | column | column-reverse;}

-Flexwrap
>3 değere sahiptir, bu değerler;
1)Nowrap: Direction komutunda belirtilen yöne göre genişliği veya yüksekliği daralarak taşma yapar. Varsayılan bu değerdir.
2)Wrap: Ögeler taşma yapmadan bir alt ya da yan bloğa geçer. direction row değerinde sahip ise soldan sağa doğru alt satıra geçer, column değerine sahipse aşağıdan yukarı yan yana oluşmaya devam eder.
3)Wrap-reverse: Direction row değerine sahipse fazla öge alt satıra geçer ve sıralamayı terse çevirir.

-Flex-flow: .containter{flex-flow: <flex-direction> <flex-wrap>} şeklinde kullanılır. Varsayılan değer direction için row; Wrap için nowrap değeridir.

-Order özelliği: Sıralamadaki bir elemanı geriye atmak ya da ön sıraya almak içn kullanılır. Kullanımı .element{order: 0 ;} bu şekildedir.

-Flex-grow: Kutu içindeki değerlerin büyüme oranını ayarlar. Kullanımı div{flex-grow:2;} ve varsayılan değer 0'dır. Ondalıklı değer alabilir fakat negatif bir değer alamaz.

-Flex-shrink: Kutu içindeki değerlerin büzülme oranını ayarlar. Kullanımı div{flex-shrink:2;} ve varsayılan değer 1'dır. Ondalıklı sayı değeri alabilir fakat negatif bir değere sahip olamaz

-Flex-basis: Ana başlangıç boyutunu belirler. Direction column özelliğine sahipse yüksekliğini belirler. KUllanımı flex-basis:200px; varsayılan başlangıç değeri ise flex-basis:auto;dur ve negatif değer alamaz

-Flex kısayolu
>flex: flex-grow | flex-shrink | flex-basis; şeklinde aynı satırda da değer atanabilir.


--align content değerleri--
>Flex-start: Esnek kapsayıcı başlangıcından başlayarak dizilmeye başlar.
>Flex-end: Esnek kutunun en altından başlayarak dizilmeye başlar.
>Center: Esnek kutuya yatayda ortalı dizilmeye başlar.
>Space-around: Ögeler esnek kutuya eşit olarak dağılır. İlk öğe ve son öğenin esnek kaba olan boşluğu bitişik öğelerin arasındaki boşluğun yarısıdır.
>Space-between: Ögeler esnek kutuya eşit olarak dağılır. ilk öğeler esnek kapsayıcın en üstüne son öğeler ise en altına dizilir.
>Stretch: Ögeler eşit yükseklikte olacak şekilde sıralanır.
>Baseline: Aynı sıradaki ögeler metin tabanı hizasına göre sıralanarak dizilir.







